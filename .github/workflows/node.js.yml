# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  # allow you to run this workflow manually from the Action tab
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x, 16.x, 18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'yarn'
    - run: yarn install
    - run: CI=false yarn run build --if-present
  
  test:
    runs-on: ubuntu-latest
    environment: test
    env:
      # Setting an environment variable with the value of a configuration variable
      REACT_APP_Firebase_apiKey: ${{ secrets.REACT_APP_FIREBASE_APIKEY }}
      REACT_APP_Firebase_authDomain: ${{ secrets.REACT_APP_FIREBASE_AUTHDOMAIN }}
      REACT_APP_Firebase_aprojectId: ${{ secrets.REACT_APP_FIREBASE_APROJECTID }}
      REACT_APP_Firebase_astorageBucket: ${{ secrets.REACT_APP_FIREBASE_ASTORAGEBUCKET }}
      REACT_APP_Firebase_amessagingSenderId: ${{ secrets.REACT_APP_FIREBASE_AMESSAGINGSENDERID }}
      REACT_APP_Firebase_aappId: ${{ secrets.REACT_APP_FIREBASE_AAPPID }}
    
    needs: build
    strategy:
      matrix:
        node-version: [14.x, 16.x, 18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'yarn'
        
    - run: yarn install
    - run: yarn test . --coverage --coverageDirectory='output/coverage/report'
    
    # Main doesn't have a PR for comments so skip that branch
    # We don't want multiple comments about code coverage, just just run it once on 14.x on Linux
    - if: ${{ github.ref != 'refs/heads/main' && matrix.node-version == '14.x' && matrix.os == 'ubuntu-latest' }}
      uses: romeovs/lcov-reporter-action@v0.2.16
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        lcov-file: ./coverage/clover.xml
    # refer: https://www.freecodecamp.org/news/how-to-generate-code-coverage-report-with-codecov-and-github-actions/